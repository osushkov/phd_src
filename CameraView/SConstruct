import sys
import os

### Stuff you might want to change ###

LIBRARY_SOURCES = [
    'src/Camera/Camera.cpp',
    'src/Camera/RemoteCamera.cpp',
    'src/Camera/PlaybackCamera.cpp',
    'src/Camera/Recorder.cpp',
    'src/SIFTGenerator.cpp',
    'src/Util/Common.cpp',
    'src/Util/Semaphore.cpp',
    'src/Util/ReadWriteLock.cpp',
    'src/Util/Timer.cpp',
    'src/Util/ParallelServer.cpp',
    'src/SIFT/imgfeatures.cpp',
    'src/SIFT/utils.cpp',
    'src/SIFT/sift.cpp',
]

BINARY_SOURCES = ['src/main.cpp']

DIST_SOURCES = LIBRARY_SOURCES + [
    'src/Camera/Camera.h',
    'src/Camera/RemoteCamera.h',
    'src/Camera/PlaybackCamera.h',
    'src/Camera/Recorder.h',
    'src/SIFTGenerator.h',
    'src/Util/Common.h',
    'src/Util/Semaphore.h',
    'src/Util/ReadWriteLock.h',
    'src/Util/Timer.h',
    'src/Util/ParallelServer.h',
    'src/SIFT/imgfeatures.h',
    'src/SIFT/utils.h',
    'src/SIFT/sift.h',
]

LIBS = ['cv', 'highgui', 'boost_thread-mt', 'pthread']

release_flags = '-Wall -D_REENTRANT -O3'
debug_flags = '-Wall -D_REENTRANT -g -DDEBUG'

### Stuff you probably don't need to change ###

env = Environment()

mode = ARGUMENTS.get('mode', 'debug')
if mode == 'debug':
    env.Append(CXXFLAGS = debug_flags)
elif mode == 'release':
    env.Append(CXXFLAGS = release_flags)
else:
    print "Unknown mode '%s%', use debug (default) or release" % mode
    sys.exit(1)

### compilation rules
library_objects = [ env.Object(s, CXX = 'g++') for s in LIBRARY_SOURCES]
binary_objects = [ env.Object(s, CXX = 'g++') for s in BINARY_SOURCES]

cameraview = env.Program('cameraview', library_objects + binary_objects,
                        CXX = 'g++', LIBS = LIBS)

