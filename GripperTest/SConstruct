import sys
import os

### Stuff you might want to change ###

LIBRARY_SOURCES = [
    'src/DXL/dxl_api.cpp',
    'src/DXL/serial.cpp',
]

BINARY_SOURCES = ['src/main.cpp']

DIST_SOURCES = LIBRARY_SOURCES + [
    'src/DXL/dxl_api.h',
    'src/DXL/dxl_api_param.h',
    'src/DXL/dxl_constants.h',
    'src/DXL/serial.h',
]

LIBS = [] 

release_flags = '-Wall -D_REENTRANT -O3'
debug_flags = '-Wall -D_REENTRANT -g -DDEBUG'

### Stuff you probably don't need to change ###

env = Environment()

mode = ARGUMENTS.get('mode', 'debug')
if mode == 'debug':
    env.Append(CXXFLAGS = debug_flags)
elif mode == 'release':
    env.Append(CXXFLAGS = release_flags)
else:
    print "Unknown mode '%s%', use debug (default) or release" % mode
    sys.exit(1)

### compilation rules
library_objects = [ env.Object(s, CXX = 'g++') for s in LIBRARY_SOURCES]
binary_objects = [ env.Object(s, CXX = 'g++') for s in BINARY_SOURCES]

armdemo = env.Program('armdemo', library_objects + binary_objects,
                        CXX = 'g++', LIBS = LIBS)

